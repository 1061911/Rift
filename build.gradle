buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://www.dimdev.org/maven/'
        }
        maven {
            url 'http://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.tweaker-client'
apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.spongepowered.mixin'

group = 'org.dimdev.rift'
version = '1.0.0'
archivesBaseName = 'Rift'

sourceCompatibility = 1.8
targetCompatibility = 1.8

def travisBuildNumber = System.getenv('TRAVIS_BUILD_NUMBER')
def versionSuffix = travisBuildNumber != null ? travisBuildNumber : 'SNAPSHOT'
version '1.0.0-' + versionSuffix

repositories {
    mavenCentral()
    ivy {
        url 'https://libraries.minecraft.net/'
        layout 'pattern', {
            artifact '[organisation]/[module]/[revision]/[artifact]-[revision](-[classifier])(.[ext])'
            m2compatible = true
        }
    }
    maven {
        url 'https://www.dimdev.org/maven/'
    }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven/'
    }
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation('org.spongepowered:mixin:0.7.10-SNAPSHOT') {
        exclude module: 'asm-commons'
        exclude module: 'asm-tree'
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'log4j-core'
    }
    implementation 'com.esotericsoftware.yamlbeans:yamlbeans:1.08'
}

minecraft {
    version = '1.13-pre5'
    mappings = 'snapshot_2'
    runDir = 'run'
    tweakClass = 'org.dimdev.simpleloader.launch.SimpleLoaderTweaker'
    makeObfSourceJar = false
}

reobf {
    jar {
        mappingType = 'NOTCH'
        classpath = sourceSets.main.compileClasspath
    }
    shadowJar {
        mappingType = 'NOTCH'
        classpath = sourceSets.main.compileClasspath
    }
}

mixin {
    defaultObfuscationEnv notch
    add sourceSets.main, "mixins.vanillafix.refmap.json"
}

sourceSets {
    main
    debug {
        compileClasspath += main.compileClasspath
    }
}

shadowJar {
    exclude 'LICENSE.txt', 'dummyThing'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier "sources"
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives shadowJar
    archives sourcesJar
}

// This is broken
runClient.group "other"
